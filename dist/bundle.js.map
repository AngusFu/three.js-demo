{"version":3,"file":"bundle.js","sources":["../scripts/common.js","../scripts/screen-1.js","../scripts/screen-2.js","../scripts/screen-3.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../scripts/CanvasRenderer.js","../scripts/Projector.js","../config.js"],"sourcesContent":["import requestAnimationFrame from 'raf';\nimport './CanvasRenderer';\nimport './Projector';\n\nconst callbacksOnResize = [];\n\nexport const THREE = window.THREE;\nexport { requestAnimationFrame };\n\nexport let windowHalfX = window.innerWidth / 2;\nexport let windowHalfY = window.innerHeight / 2;\n\nexport function toArray(arrLike) {\n  return Array.prototype.slice.call(arrLike);\n}\nexport function $(selector) {\n  return document.querySelector(selector);\n}\nexport function $$(selector) {\n  return toArray(document.querySelectorAll(selector));\n}\n\n/**\n * transform point in Three.js world to client\n */\nexport function toScreenCords({\n  x,\n  y,\n  z\n}, camera) {\n  const vector = (new THREE.Vector3(x, y, z)).project(camera);\n  return {\n    x: Math.round(windowHalfX * (1 + vector.x)),\n    y: Math.round(windowHalfY * (1 - vector.y))\n  };\n}\n\n/**\n * add updating function that will be invoked window resize\n */\nexport function bindResizeCallback(camera, renderer) {\n  const update = function () {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  };\n  callbacksOnResize.push(update);\n}\n\nwindow.addEventListener('resize', function onWindowResize() {\n  windowHalfX = window.innerWidth / 2;\n  windowHalfY = window.innerHeight / 2;\n  callbacksOnResize.forEach(fn => fn());\n});\n\n\n/**\n * Axis helper\n */\nexport function addAxisHelper(scene) {\n  const axisHelper = new THREE.AxisHelper(1000000);\n  axisHelper.position.set(0, 0, 0);\n  scene.add(axisHelper);\n}\n\n/**\n * create scene & renderer\n */\nexport function createSceneAndRenderer() {\n  const scene = new THREE.Scene();\n  const renderer = new THREE.CanvasRenderer({ alpha: true });\n  renderer.setClearColor(0x000000, 1);\n  return { scene, renderer };\n}\n\n/**\n * update stage\n */\nexport function animate(render) {\n  function animate() {\n    requestAnimationFrame(animate);\n    render();\n  }\n  animate();\n}\n\n/**\n * initialize\n */\nexport function initThreeJS({\n  camera,\n  renderer,\n  container,\n  render\n}) {\n  bindResizeCallback(camera, renderer);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  container.appendChild(renderer.domElement);\n  animate(render);\n}\n\n/**\n * 波纹粒子\n */\nexport function initParticles({\n  scene,\n  amountX,\n  amontY,\n  sep,\n  markPoint\n}) {\n  let index = 0;\n  const particles = [];\n  const pointsWithFlag = [];\n  const material = new THREE.SpriteCanvasMaterial({\n    color: 0x94fffb,\n    program: function (context) {\n      context.beginPath();\n      context.arc(0, 0, 1, 0, Math.PI * 2, true);\n      context.fill();\n    }\n  });\n\n  for (let i = 0; i < amountX; i++) {\n    for (let j = 0; j < amontY; j++) {\n      const particle = new THREE.Sprite(material);\n      particle.position.x = i * sep - ((amountX * sep) / 2);\n      particle.position.z = j * sep - ((amontY * sep) / 2);\n      particles[index++] = particle;\n      \n      scene.add(particle);\n      markPoint && markPoint(i, j, particle, pointsWithFlag);\n    }\n  }\n  return {\n    particles,\n    pointsWithFlag\n  };\n}\n","import {\r\n  $,\r\n  THREE,\r\n  windowHalfX,\r\n  windowHalfY,\r\n  toScreenCords,\r\n  createSceneAndRenderer,\r\n  initParticles,\r\n  initThreeJS\r\n} from './common';\r\n\r\nimport { screenOneFlags } from '../config';\r\n\r\nconst screenOneFlagMap = initFlags(screenOneFlags);\r\n\r\nconst SEPARATION = 70;\r\nconst AMOUNTX = 50;\r\nconst AMOUNTY = 60;\r\n\r\nlet count = 0;\r\nlet mouseX = 85;\r\nlet mouseY = -420;\r\n\r\nconst { scene, renderer } = createSceneAndRenderer();\r\nconst camera = new THREE.PerspectiveCamera(120, window.innerWidth / window.innerHeight, 1, 10000);\r\ncamera.position.z = 800;\r\n\r\nconst { particles, pointsWithFlag } = initParticles({\r\n  scene,\r\n  amountX: AMOUNTX,\r\n  amontY: AMOUNTY,\r\n  sep: SEPARATION,\r\n  markPoint:(i, j, particle, marked) => {\r\n    if (`${i}x${j}` in screenOneFlagMap) {\r\n      const { x, z } = particle.position;\r\n      marked.push({ x, z });\r\n    }\r\n  }\r\n});\r\n\r\n\r\ninitThreeJS({\r\n  render,\r\n  camera,\r\n  renderer,\r\n  container: $('#three-js-screen-1')\r\n});\r\n\r\nfunction render() {\r\n  camera.position.x += (mouseX - camera.position.x) * .05;\r\n  camera.position.y += (-mouseY - camera.position.y) * .05;\r\n  camera.lookAt(scene.position);\r\n\r\n  let i = 0;\r\n  let j = 0;\r\n  for (let ix = 0; ix < AMOUNTX; ix++) {\r\n    for (let iy = 0; iy < AMOUNTY; iy++) {\r\n      const particle = particles[i++];\r\n      particle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\r\n      particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 1.4 + (Math.sin((iy + count) * 0.5) + 1) * 1.4;\r\n\r\n      if (screenOneFlagMap[`${ix}x${iy}`]) {\r\n        const point = pointsWithFlag[j++];\r\n        point.y = particle.position.y;\r\n\r\n        const {\r\n          style,\r\n          mins,\r\n          maxs\r\n        } = screenOneFlagMap[`${ix}x${iy}`];\r\n        const {\r\n          x,\r\n          y\r\n        } = toScreenCords(point, camera);\r\n        const scale = Math.min(\r\n          Math.max(\r\n            particle.scale.x / 6 * maxs,\r\n            mins\r\n          ),\r\n          maxs\r\n        ) + particle.scale.x / 30;\r\n        style.transform = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;\r\n      }\r\n    }\r\n  }\r\n\r\n  renderer.render(scene, camera);\r\n  count += 0.1;\r\n}\r\n\r\nfunction initFlags(flags) {\r\n  const ret = flags.map(flag => {\r\n    const { cn, en, mins, maxs } = flag;\r\n    const div = document.createElement('div');\r\n\r\n    div.className = 'flag-1';\r\n    div.innerHTML = `<p>${en}</p><h2>${cn}</h2>`;\r\n    $('#three-js-screen-1').appendChild(div);\r\n\r\n    return {\r\n      style: div.style,\r\n      mins,\r\n      maxs\r\n    };\r\n  });\r\n\r\n  return flags.reduce((acc, f, i) => {\r\n    acc[f.cord] = ret[i]\r\n    return acc;\r\n  }, {});\r\n}\r\n","import {\r\n  $,\r\n  THREE,\r\n  windowHalfX,\r\n  windowHalfY,\r\n  createSceneAndRenderer,\r\n  initParticles,\r\n  initThreeJS\r\n} from './common';\r\n\r\nimport { screenOneFlags } from '../config';\r\n\r\nconst SEPARATION = 70;\r\nconst AMOUNTX = 50;\r\nconst AMOUNTY = 60;\r\n\r\nlet count = 0;\r\nlet mouseX = 885;\r\nlet mouseY = -359;\r\n\r\nconst { scene, renderer } = createSceneAndRenderer();\r\nconst camera = new THREE.PerspectiveCamera(120, window.innerWidth / window.innerHeight, 1, 10000);\r\ncamera.position.z = 500;\r\n\r\nconst { particles } = initParticles({\r\n  scene,\r\n  amountX: AMOUNTX,\r\n  amontY: AMOUNTY,\r\n  sep: SEPARATION\r\n});\r\n\r\ninitThreeJS({\r\n  render,\r\n  camera,\r\n  renderer,\r\n  container: $('#three-js-screen-2')\r\n});\r\n\r\nfunction render() {\r\n  camera.position.x += (mouseX - camera.position.x) * .05;\r\n  camera.position.y += (-mouseY - camera.position.y) * .05;\r\n  camera.lookAt(scene.position);\r\n\r\n  let i = 0;\r\n  let j = 0;\r\n  for (let ix = 0; ix < AMOUNTX; ix++) {\r\n    for (let iy = 0; iy < AMOUNTY; iy++) {\r\n      const particle = particles[i++];\r\n      particle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\r\n      particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 1.4 + (Math.sin((iy + count) * 0.5) + 1) * 1.4;\r\n    }\r\n  }\r\n  renderer.render(scene, camera);\r\n  count += 0.1;\r\n}\r\n","\r\nimport {\r\n  $,\r\n  toArray,\r\n  THREE,\r\n  windowHalfX,\r\n  windowHalfY,\r\n  createSceneAndRenderer,\r\n  initParticles,\r\n  initThreeJS\r\n} from './common';\r\nimport { logoBgColorMatrix } from '../config';\r\n\r\nconst screenDOM = $('#three-js-screen-3');\r\n\r\nconst SEPARATION = 70;\r\nconst AMOUNTX = 60;\r\nconst AMOUNTY = 24;\r\n\r\nlet count = 0;\r\nlet mouseX = 885;\r\nlet mouseY = -359;\r\n\r\nconst { scene, renderer } = createSceneAndRenderer();\r\nconst camera = new THREE.PerspectiveCamera(120, window.innerWidth / window.innerHeight, 1, 10000);\r\ncamera.position.z = 0;\r\n\r\nconst { particles } = initParticles({\r\n  scene,\r\n  amountX: AMOUNTX,\r\n  amontY: AMOUNTY,\r\n  sep: SEPARATION\r\n});\r\n\r\ninitLogoWall();\r\ninitThreeJS({\r\n  render,\r\n  camera,\r\n  renderer,\r\n  container: screenDOM\r\n});\r\n\r\nfunction render() {\r\n  camera.position.x += (mouseX - camera.position.x) * .05;\r\n  camera.position.y += (-mouseY - camera.position.y) * .05;\r\n  camera.lookAt(scene.position);\r\n\r\n  let i = 0;\r\n  let j = 0;\r\n  for (let ix = 0; ix < AMOUNTX; ix++) {\r\n    for (let iy = 0; iy < AMOUNTY; iy++) {\r\n      const particle = particles[i++];\r\n      particle.position.y = (Math.sin((ix + count) * 0.3) * 50) + (Math.sin((iy + count) * 0.5) * 50);\r\n      particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 1.4 + (Math.sin((iy + count) * 0.5) + 1) * 1.4;\r\n    }\r\n  }\r\n\r\n  renderer.render(scene, camera);\r\n  count += 0.1;\r\n}\r\n\r\nfunction initLogoWall() {\r\n  const queryWithSideEffect = function (sel, fn) {\r\n    const arr = toArray(screenDOM.querySelectorAll(sel));\r\n    return arr.map((el, i) => {\r\n      fn && fn(el, i);\r\n      return el;\r\n    });\r\n  };\r\n\r\n  const logoFlips = queryWithSideEffect(\r\n    '.logo-flip',\r\n    (el, i) => {\r\n      const color = logoBgColorMatrix[i];\r\n      el.style.backgroundColor = `rgb(${color},${color},${color})`;\r\n    }\r\n  );\r\n\r\n  const highlightFlips = function () {\r\n    // remove highlight elems first\r\n    queryWithSideEffect(\r\n      '.hlight',\r\n      el => el.classList.remove('hlight')\r\n    );\r\n\r\n    // 随机两个高亮\r\n    // 保证左侧四列和右侧四列都有\r\n    // 且两者不在一行\r\n    // 第四行容易被遮住 所以降低概率\r\n    const getColNum = () => {\r\n      return Math.random() > 0.2 ? (Math.random() * 3 | 0) : 3;\r\n    };\r\n\r\n    const [first, second] = (() => {\r\n      const cols = [getColNum(), getColNum()];\r\n\r\n      while (cols[0] === cols[1]) {\r\n        cols[1] = getColNum();\r\n      }\r\n\r\n      return [\r\n        7 * cols[0] + (Math.random() * 4 | 0),\r\n        7 * cols[1] + (Math.random() * 3 | 0) + 4\r\n      ];\r\n    })();\r\n\r\n    logoFlips[first].classList.add('hlight');\r\n    logoFlips[second].classList.add('hlight');\r\n  }\r\n\r\n  ;(function runFlipHighlight() {\r\n    highlightFlips();\r\n    setTimeout(runFlipHighlight, Math.random() * 5000 + 2000);\r\n  }());\r\n}\r\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function() {\n  root.requestAnimationFrame = raf\n  root.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\nconst THREE = window.THREE;\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteCanvasMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.program = function () {};\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\nTHREE.SpriteCanvasMaterial.prototype.isSpriteCanvasMaterial = true;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteCanvasMaterial();\n\n\tmaterial.copy( this );\n\tmaterial.color.copy( this.color );\n\tmaterial.program = this.program;\n\n\treturn material;\n\n};\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\tparameters = parameters || {};\n\n\tvar _this = this,\n\t\t_renderData, _elements, _lights,\n\t\t_projector = new THREE.Projector(),\n\n\t\t_canvas = parameters.canvas !== undefined\n\t\t\t\t ? parameters.canvas\n\t\t\t\t : document.createElement( 'canvas' ),\n\n\t\t_canvasWidth = _canvas.width,\n\t\t_canvasHeight = _canvas.height,\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n\t\t_viewportX = 0,\n\t\t_viewportY = 0,\n\t\t_viewportWidth = _canvasWidth,\n\t\t_viewportHeight = _canvasHeight,\n\n\t\t_pixelRatio = 1,\n\n\t\t_context = _canvas.getContext( '2d', {\n\t\t\talpha: parameters.alpha === true\n\t\t} ),\n\n\t\t_clearColor = new THREE.Color( 0x000000 ),\n\t\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\n\t\t_contextGlobalAlpha = 1,\n\t\t_contextGlobalCompositeOperation = 0,\n\t\t_contextStrokeStyle = null,\n\t\t_contextFillStyle = null,\n\t\t_contextLineWidth = null,\n\t\t_contextLineCap = null,\n\t\t_contextLineJoin = null,\n\t\t_contextLineDash = [],\n\n\t\t_v1, _v2, _v3,\n\n\t\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\n\t\t_color = new THREE.Color(),\n\n\t\t_diffuseColor = new THREE.Color(),\n\t\t_emissiveColor = new THREE.Color(),\n\n\t\t_lightColor = new THREE.Color(),\n\n\t\t_patterns = {},\n\n\t\t_uvs,\n\t\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n\t\t_clipBox = new THREE.Box2(),\n\t\t_clearBox = new THREE.Box2(),\n\t\t_elemBox = new THREE.Box2(),\n\n\t\t_ambientLight = new THREE.Color(),\n\t\t_directionalLights = new THREE.Color(),\n\t\t_pointLights = new THREE.Color(),\n\n\t\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t\t_centroid = new THREE.Vector3(),\n\t\t_normal = new THREE.Vector3(),\n\t\t_normalViewMatrix = new THREE.Matrix3();\n\n\t/* TODO\n\t_canvas.mozImageSmoothingEnabled = false;\n\t_canvas.webkitImageSmoothingEnabled = false;\n\t_canvas.msImageSmoothingEnabled = false;\n\t_canvas.imageSmoothingEnabled = false;\n\t*/\n\n\t// dash+gap fallbacks for Firefox and everything else\n\n\tif ( _context.setLineDash === undefined ) {\n\n\t\t_context.setLineDash = function () {};\n\n\t}\n\n\tthis.domElement = _canvas;\n\n\tthis.autoClear = true;\n\tthis.sortObjects = true;\n\tthis.sortElements = true;\n\n\tthis.info = {\n\n\t\trender: {\n\n\t\t\tvertices: 0,\n\t\t\tfaces: 0\n\n\t\t}\n\n\t};\n\n\t// WebGLRenderer compatibility\n\n\tthis.supportsVertexTextures = function () {};\n\tthis.setFaceCulling = function () {};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _context;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _context.getContextAttributes();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value !== undefined ) _pixelRatio = value;\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_canvasWidth = width * _pixelRatio;\n\t\t_canvasHeight = height * _pixelRatio;\n\n\t\t_canvas.width = _canvasWidth;\n\t\t_canvas.height = _canvasHeight;\n\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_contextGlobalAlpha = 1;\n\t\t_contextGlobalCompositeOperation = 0;\n\t\t_contextStrokeStyle = null;\n\t\t_contextFillStyle = null;\n\t\t_contextLineWidth = null;\n\t\t_contextLineCap = null;\n\t\t_contextLineJoin = null;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewportX = x * _pixelRatio;\n\t\t_viewportY = y * _pixelRatio;\n\n\t\t_viewportWidth = width * _pixelRatio;\n\t\t_viewportHeight = height * _pixelRatio;\n\n\t};\n\n\tthis.setScissor = function () {};\n\tthis.setScissorTest = function () {};\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t};\n\n\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\tthis.setClearColor( hex, alpha );\n\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn 0;\n\n\t};\n\n\tthis.clear = function () {\n\n\t\tif ( _clearBox.isEmpty() === false ) {\n\n\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t_clearBox.expandByScalar( 2 );\n\n\t\t\t_clearBox.min.x =   _clearBox.min.x + _canvasWidthHalf;\n\t\t\t_clearBox.min.y = - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t_clearBox.max.x =   _clearBox.max.x + _canvasWidthHalf;\n\t\t\t_clearBox.max.y = - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n\t\t\tif ( _clearAlpha < 1 ) {\n\n\t\t\t\t_context.clearRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( _clearAlpha > 0 ) {\n\n\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\tsetOpacity( 1 );\n\n\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n\t\t\t\t_context.fillRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t_clearBox.makeEmpty();\n\n\t\t}\n\n\t};\n\n\t// compatibility\n\n\tthis.clearColor = function () {};\n\tthis.clearDepth = function () {};\n\tthis.clearStencil = function () {};\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera.isCamera === undefined ) {\n\n\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar background = scene.background;\n\n\t\tif ( background && background.isColor ) {\n\n\t\t\tsetFillStyle( 'rgb(' + Math.floor( background.r * 255 ) + ',' + Math.floor( background.g * 255 ) + ',' + Math.floor( background.b * 255 ) + ')' );\n\t\t\t_context.fillRect( 0, 0, _canvasWidth, _canvasHeight );\n\n\t\t} else if ( this.autoClear === true ) {\n\n\t\t\tthis.clear();\n\n\t\t}\n\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\n\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t_elements = _renderData.elements;\n\t\t_lights = _renderData.lights;\n\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t/* DEBUG\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t*/\n\n\t\tcalculateLights();\n\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\tvar element = _elements[ e ];\n\n\t\t\tvar material = element.material;\n\n\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t_elemBox.makeEmpty();\n\n\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\n\t\t\t\t_v1 = element;\n\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\tif ( material.overdraw > 0 ) {\n\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n\t\t\t\t}\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t_v3.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t*/\n\n\t\t\t_clearBox.union( _elemBox );\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetLineWidth( 1 );\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t*/\n\n\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n\t};\n\n\t//\n\n\tfunction calculateLights() {\n\n\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\t\t\tvar lightColor = light.color;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t_ambientLight.add( lightColor );\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_directionalLights.add( lightColor );\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_pointLights.add( lightColor );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction calculateLight( position, normal, color ) {\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\n\t\t\t_lightColor.copy( light.color );\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\tvar amount = normal.dot( lightPosition );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n\t\t\t\tif ( amount == 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderSprite( v1, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\n\t\tvar dist = Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tvar texture = material.map;\n\n\t\t\tif ( texture !== null ) {\n\n\t\t\t\tvar pattern = _patterns[ texture.id ];\n\n\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t\t\t\tvar bitmap = texture.image;\n\n\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\n\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\n\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\tvar cy = scaleY / sy;\n\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t_context.restore();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// no texture\n\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t_context.restore();\n\n\t\t\t}\n\n\t\t} else if ( material.isSpriteCanvasMaterial ) {\n\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX, scaleY );\n\n\t\t\tmaterial.program( _context );\n\n\t\t\t_context.restore();\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX * material.size, - scaleY * material.size );\n\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t_context.restore();\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t_context.stroke();\n\t\t*/\n\n\t}\n\n\tfunction renderLine( v1, v2, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\n\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\n\t\t\t} else {\n\n\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\n\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\n\t\t\t\t\t} catch ( exception ) {\n\n\t\t\t\t\t\tgrad = colorStyle1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStrokeStyle( grad );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_context.stroke();\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t} else if ( material.isLineDashedMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\n\t\t\t_context.stroke();\n\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t\tsetLineDash( [] );\n\n\t\t}\n\n\t}\n\n\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n\t\t_this.info.render.vertices += 3;\n\t\t_this.info.render.faces ++;\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n\t\tif ( ( material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial ) && material.map === null ) {\n\n\t\t\t_diffuseColor.copy( material.color );\n\t\t\t_emissiveColor.copy( material.emissive );\n\n\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t_diffuseColor.multiply( element.color );\n\n\t\t\t}\n\n\t\t\t_color.copy( _ambientLight );\n\n\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\n\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else if ( material.isMeshBasicMaterial || material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial ) {\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar mapping = material.map.mapping;\n\n\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\n\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.envMap !== null ) {\n\n\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_color.copy( material.color );\n\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t\t_color.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else {\n\n\t\t\t_color.setRGB( 1, 1, 1 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( x0, y0 );\n\t\t_context.lineTo( x1, y1 );\n\t\t_context.lineTo( x2, y2 );\n\t\t_context.closePath();\n\n\t}\n\n\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\n\t\tsetLineWidth( linewidth );\n\t\tsetLineCap( linecap );\n\t\tsetLineJoin( linejoin );\n\t\tsetStrokeStyle( color.getStyle() );\n\n\t\t_context.stroke();\n\n\t\t_elemBox.expandByScalar( linewidth * 2 );\n\n\t}\n\n\tfunction fillPath( color ) {\n\n\t\tsetFillStyle( color.getStyle() );\n\t\t_context.fill();\n\n\t}\n\n\tfunction textureToPattern( texture ) {\n\n\t\tif ( texture.version === 0 ||\n\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\ttexture instanceof THREE.DataTexture ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\n\t\t}\n\n\t\tvar image = texture.image;\n\n\t\tif ( image.complete === false ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: 0\n\t\t\t};\n\n\t\t}\n\n\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping || texture.wrapS === THREE.MirroredRepeatWrapping;\n\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping || texture.wrapT === THREE.MirroredRepeatWrapping;\n\n\t\tvar mirrorX = texture.wrapS === THREE.MirroredRepeatWrapping;\n\t\tvar mirrorY = texture.wrapT === THREE.MirroredRepeatWrapping;\n\n\t\t//\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = image.width * ( mirrorX ? 2 : 1 );\n\t\tcanvas.height = image.height * ( mirrorY ? 2 : 1 );\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\tcontext.drawImage( image, 0, 0 );\n\n\t\tif ( mirrorX === true ) {\n\n\t\t\tcontext.setTransform( - 1, 0, 0, - 1, image.width, image.height );\n\t\t\tcontext.drawImage( image, - image.width, 0 );\n\n\t\t}\n\n\t\tif ( mirrorY === true ) {\n\n\t\t\tcontext.setTransform( 1, 0, 0, 1, 0, 0 );\n\t\t\tcontext.drawImage( image, 0, image.height );\n\n\t\t}\n\n\t\tif ( mirrorX === true && mirrorY === true ) {\n\n\t\t\tcontext.setTransform( - 1, 0, 0, 1, image.width, 0 );\n\t\t\tcontext.drawImage( image, - image.width, image.height );\n\n\t\t}\n\n\t\tvar repeat = 'no-repeat';\n\n\t\tif ( repeatX === true && repeatY === true ) {\n\n\t\t\trepeat = 'repeat';\n\n\t\t} else if ( repeatX === true ) {\n\n\t\t\trepeat = 'repeat-x';\n\n\t\t} else if ( repeatY === true ) {\n\n\t\t\trepeat = 'repeat-y';\n\n\t\t}\n\n\t\tvar pattern = _context.createPattern( canvas, repeat );\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\treturn {\n\t\t\tcanvas: pattern,\n\t\t\tversion: texture.version\n\t\t};\n\n\t}\n\n\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n\t\tvar pattern = _patterns[ texture.id ];\n\n\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\tpattern = textureToPattern( texture );\n\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t}\n\n\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t} else {\n\n\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t_context.fill();\n\t\t\treturn;\n\n\t\t}\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\t\twidth = texture.image.width * texture.repeat.x,\n\t\t\theight = texture.image.height * texture.repeat.y;\n\n\t\tu0 = ( u0 + offsetX ) * width;\n\t\tv0 = ( v0 + offsetY ) * height;\n\n\t\tu1 = ( u1 + offsetX ) * width;\n\t\tv1 = ( v1 + offsetY ) * height;\n\n\t\tu2 = ( u2 + offsetX ) * width;\n\t\tv2 = ( v2 + offsetY ) * height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.fill();\n\t\t_context.restore();\n\n\t}\n\n\t/*\n\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\twidth = image.width - 1,\n\t\theight = image.height - 1;\n\n\t\tu0 *= width; v0 *= height;\n\t\tu1 *= width; v1 *= height;\n\t\tu2 *= width; v2 *= height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.clip();\n\t\t_context.drawImage( image, 0, 0 );\n\t\t_context.restore();\n\n\t}\n\t*/\n\n\t// Hide anti-alias gaps\n\n\tfunction expand( v1, v2, pixels ) {\n\n\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\t\tdet = x * x + y * y, idet;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = pixels / Math.sqrt( det );\n\n\t\tx *= idet; y *= idet;\n\n\t\tv2.x += x; v2.y += y;\n\t\tv1.x -= x; v1.y -= y;\n\n\t}\n\n\t// Context cached methods.\n\n\tfunction setOpacity( value ) {\n\n\t\tif ( _contextGlobalAlpha !== value ) {\n\n\t\t\t_context.globalAlpha = value;\n\t\t\t_contextGlobalAlpha = value;\n\n\t\t}\n\n\t}\n\n\tfunction setBlending( value ) {\n\n\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\n\t\t\tif ( value === THREE.NormalBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\n\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\n\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'darker';\n\n\t\t\t} else if ( value === THREE.MultiplyBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'multiply';\n\n\t\t\t}\n\n\t\t\t_contextGlobalCompositeOperation = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineWidth( value ) {\n\n\t\tif ( _contextLineWidth !== value ) {\n\n\t\t\t_context.lineWidth = value;\n\t\t\t_contextLineWidth = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineCap( value ) {\n\n\t\t// \"butt\", \"round\", \"square\"\n\n\t\tif ( _contextLineCap !== value ) {\n\n\t\t\t_context.lineCap = value;\n\t\t\t_contextLineCap = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineJoin( value ) {\n\n\t\t// \"round\", \"bevel\", \"miter\"\n\n\t\tif ( _contextLineJoin !== value ) {\n\n\t\t\t_context.lineJoin = value;\n\t\t\t_contextLineJoin = value;\n\n\t\t}\n\n\t}\n\n\tfunction setStrokeStyle( value ) {\n\n\t\tif ( _contextStrokeStyle !== value ) {\n\n\t\t\t_context.strokeStyle = value;\n\t\t\t_contextStrokeStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setFillStyle( value ) {\n\n\t\tif ( _contextFillStyle !== value ) {\n\n\t\t\t_context.fillStyle = value;\n\t\t\t_contextFillStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineDash( value ) {\n\n\t\tif ( _contextLineDash.length !== value.length ) {\n\n\t\t\t_context.setLineDash( value );\n\t\t\t_contextLineDash = value;\n\n\t\t}\n\n\t}\n\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\nconst THREE = window.THREE;\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t\t_vector3 = new THREE.Vector3(),\n\t\t_vector4 = new THREE.Vector4(),\n\n\t\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t\t_boundingBox = new THREE.Box3(),\n\t\t_points3 = new Array( 3 ),\n\n\t\t_viewMatrix = new THREE.Matrix4(),\n\t\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_modelMatrix,\n\t\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t\t_normalMatrix = new THREE.Matrix3(),\n\n\t\t_frustum = new THREE.Frustum(),\n\n\t\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar colors = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tcolors.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t}\n\n\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\tprojectVertex( _vertex );\n\n\t\t}\n\n\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\tnormals.push( x, y, z );\n\n\t\t}\n\n\t\tfunction pushColor( r, g, b ) {\n\n\t\t\tcolors.push( r, g, b );\n\n\t\t}\n\n\t\tfunction pushUv( x, y ) {\n\n\t\t\tuvs.push( x, y );\n\n\t\t}\n\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t}\n\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t}\n\n\t\tfunction pushLine( a, b ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t// Clip\n\n\t\t\tv1.positionScreen.copy( v1.position ).applyMatrix4( _modelViewProjectionMatrix );\n\t\t\tv2.positionScreen.copy( v2.position ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\tif ( clipLine( v1.positionScreen, v2.positionScreen ) === true ) {\n\n\t\t\t\t// Perform the perspective divide\n\t\t\t\tv1.positionScreen.multiplyScalar( 1 / v1.positionScreen.w );\n\t\t\t\tv2.positionScreen.multiplyScalar( 1 / v2.positionScreen.w );\n\n\t\t\t\t_line = getNextLineInPool();\n\t\t\t\t_line.id = object.id;\n\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t_line.z = Math.max( v1.positionScreen.z, v2.positionScreen.z );\n\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t_line.material = object.material;\n\n\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t_line.vertexColors[ 0 ].fromArray( colors, a * 3 );\n\t\t\t\t\t_line.vertexColors[ 1 ].fromArray( colors, b * 3 );\n\n\t\t\t\t}\n\n\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushTriangle( a, b, c ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// use first vertex normal as face normal\n\n\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = object.material;\n\n\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushColor: pushColor,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t};\n\n\t};\n\n\tvar renderList = new RenderList();\n\n\tfunction projectObject( object ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t_renderData.lights.push( object );\n\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\tif ( object.material.visible === false ) return;\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\taddObject( object );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction addObject( object ) {\n\n\t\t_object = getNextObjectInPool();\n\t\t_object.id = object.id;\n\t\t_object.object = object;\n\n\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\n\t\t_object.z = _vector3.z;\n\t\t_object.renderOrder = object.renderOrder;\n\n\t\t_renderData.objects.push( _object );\n\n\t}\n\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tprojectObject( scene );\n\n\t\tif ( sortObjects === true ) {\n\n\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t}\n\n\t\t//\n\n\t\tvar objects = _renderData.objects;\n\n\t\tfor ( var o = 0, ol = objects.length; o < ol; o ++ ) {\n\n\t\t\tvar object = objects[ o ].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject( object );\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\tmaterial = isMultiMaterial === true\n\t\t\t\t\t\t\t ? object.material[ face.materialIndex ]\n\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributes.color !== undefined ) {\n\n\t\t\t\t\t\t\tvar colors = attributes.color.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Points ) {\n\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector4.set( vertex.x, vertex.y, vertex.z, 1 );\n\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tpushPoint( _vector4, object, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( sortElements === true ) {\n\n\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t}\n\n\t\treturn _renderData;\n\n\t};\n\n\tfunction pushPoint( _vector4, object, camera ) {\n\n\t\tvar invW = 1 / _vector4.w;\n\n\t\t_vector4.z *= invW;\n\n\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t_sprite.id = object.id;\n\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t_sprite.z = _vector4.z;\n\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t_sprite.object = object;\n\n\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t_sprite.material = object.material;\n\n\t\t\t_renderData.elements.push( _sprite );\n\n\t\t}\n\n\t}\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push( object );\n\t\t\t_objectPoolLength ++;\n\t\t\t_objectCount ++;\n\t\t\treturn object;\n\n\t\t}\n\n\t\treturn _objectPool[ _objectCount ++ ];\n\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push( vertex );\n\t\t\t_vertexPoolLength ++;\n\t\t\t_vertexCount ++;\n\t\t\treturn vertex;\n\n\t\t}\n\n\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push( face );\n\t\t\t_facePoolLength ++;\n\t\t\t_faceCount ++;\n\t\t\treturn face;\n\n\t\t}\n\n\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push( line );\n\t\t\t_linePoolLength ++;\n\t\t\t_lineCount ++;\n\t\t\treturn line;\n\n\t\t}\n\n\t\treturn _linePool[ _lineCount ++ ];\n\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push( sprite );\n\t\t\t_spritePoolLength ++;\n\t\t\t_spriteCount ++;\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t}\n\n\t//\n\n\tfunction painterSort( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else if ( a.id !== b.id ) {\n\n\t\t\treturn a.id - b.id;\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tfunction clipLine( s1, s2 ) {\n\n\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t// Z = -1 and Z = +1, respectively.\n\n\t\t\tbc1near = s1.z + s1.w,\n\t\t\tbc2near = s2.z + s2.w,\n\t\t\tbc1far = - s1.z + s1.w,\n\t\t\tbc2far = - s2.z + s2.w;\n\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t}\n\n\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t}\n\n\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n","export const screenOneFlags = [{\n  en: \"Technology driven retail\",\n  cn: \"技术驱动零售\",\n  cord: \"10x30\",\n  maxs: 0.6,\n  mins: 0.2\n}, {\n  en: \"New retail\",\n  cn: \"新零售\",\n  cord: \"24x40\",\n  maxs: 1.5,\n  mins: 1\n}, {\n  en: \"Digital marketing\",\n  cn: \"数字营销\",\n  cord: \"28x32\",\n  maxs: 0.6,\n  mins: 0.2\n}, {\n  en: \"Reconstruction of freight yard\",\n  cn: \"人货场重构\",\n  cord: \"38x24\",\n  maxs: 0.5,\n  mins: 0.15\n}, {\n  en: \"Data brand\",\n  cn: \"数据赋能品牌\",\n  cord: \"33x38\",\n  maxs: 1.2,\n  mins: 0.9\n}];\n\nexport const logoBgColorMatrix = [\n  57, 52, 57, 52, 57, 57, 52,\n  52, 57, 52, 57, 52, 52, 57,\n  52, 57, 57, 57, 52, 57, 57,\n  57, 52, 52, 57, 52, 57, 52\n];\n"],"names":["toArray","arrLike","Array","prototype","slice","call","$","selector","document","querySelector","toScreenCords","ref","camera","x","y","z","vector","THREE","Vector3","project","Math","round","windowHalfX","windowHalfY","bindResizeCallback","renderer","const","update","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","callbacksOnResize","push","createSceneAndRenderer","scene","Scene","CanvasRenderer","alpha","setClearColor","animate","render","requestAnimationFrame","initThreeJS","container","setPixelRatio","devicePixelRatio","appendChild","domElement","initParticles","let","amountX","amontY","sep","markPoint","index","particles","pointsWithFlag","material","SpriteCanvasMaterial","color","program","context","beginPath","arc","PI","fill","i","j","particle","Sprite","position","add","mouseX","mouseY","lookAt","ix","AMOUNTX","iy","AMOUNTY","sin","count","scale","screenOneFlagMap","point","style","mins","maxs","min","max","transform","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","module","process","hr","uptime","Date","getTime","this","root","global","vendors","suffix","raf","caf","length","last","id","queue","callback","_now","next","setTimeout","cp","cancelled","e","handle","fn","apply","arguments","cancelAnimationFrame","parameters","Material","type","Color","setValues","Object","create","constructor","isSpriteCanvasMaterial","clone","copy","calculateLights","_ambientLight","setRGB","_directionalLights","_pointLights","l","ll","_lights","light","lightColor","isAmbientLight","isDirectionalLight","isPointLight","calculateLight","normal","_lightColor","lightPosition","_vector3","setFromMatrixPosition","matrixWorld","normalize","amount","dot","intensity","multiplyScalar","subVectors","distance","distanceTo","renderSprite","v1","element","setOpacity","opacity","setBlending","blending","scaleX","_canvasWidthHalf","scaleY","_canvasHeightHalf","dist","sqrt","_elemBox","set","isSpriteMaterial","texture","map","pattern","_patterns","undefined","version","textureToPattern","canvas","setFillStyle","bitmap","image","ox","width","offset","oy","height","sx","repeat","sy","cx","cy","_context","save","translate","rotation","rotate","fillRect","restore","getStyle","setStrokeStyle","isPointsMaterial","size","renderLine","v2","moveTo","positionScreen","lineTo","isLineBasicMaterial","setLineWidth","linewidth","setLineCap","linecap","setLineJoin","linejoin","vertexColors","VertexColors","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","expandByScalar","isLineDashedMaterial","setLineDash","dashSize","gapSize","renderFace3","v3","uv1","uv2","uv3","_this","info","vertices","faces","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","drawTriangle","isMeshLambertMaterial","isMeshPhongMaterial","isMeshStandardMaterial","_diffuseColor","_emissiveColor","emissive","FaceColors","multiply","_color","_centroid","positionWorld","divideScalar","normalModel","wireframe","strokePath","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fillPath","isMeshBasicMaterial","mapping","UVMapping","_uvs","uvs","patternPath","envMap","SphericalReflectionMapping","_normal","vertexNormalsModel","applyMatrix3","_normalViewMatrix","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","isMeshNormalMaterial","addScalar","x0","y0","x1","y1","x2","y2","closePath","CompressedTexture","DataTexture","complete","repeatX","wrapS","RepeatWrapping","MirroredRepeatWrapping","repeatY","wrapT","mirrorX","mirrorY","createElement","getContext","setTransform","drawImage","createPattern","onUpdate","u0","v0","u1","u2","a","b","c","d","f","det","idet","offsetX","offsetY","expand","pixels","value","_contextGlobalAlpha","globalAlpha","_contextGlobalCompositeOperation","NormalBlending","globalCompositeOperation","AdditiveBlending","SubtractiveBlending","MultiplyBlending","_contextLineWidth","lineWidth","_contextLineCap","lineCap","_contextLineJoin","lineJoin","_contextStrokeStyle","strokeStyle","_contextFillStyle","fillStyle","_contextLineDash","_renderData","_elements","_v1","_v2","_v3","_projector","Projector","_canvas","_canvasWidth","_canvasHeight","floor","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_pixelRatio","_clearColor","_clearAlpha","_clipBox","Box2","_clearBox","Matrix3","autoClear","sortObjects","sortElements","supportsVertexTextures","setFaceCulling","getContextAttributes","getPixelRatio","updateStyle","setViewport","setScissor","setScissorTest","setClearColorHex","hex","console","warn","getClearColor","getClearAlpha","getMaxAnisotropy","clear","isEmpty","intersect","clearRect","r","g","makeEmpty","clearColor","clearDepth","clearStencil","isCamera","background","isColor","projectScene","elements","lights","getNormalMatrix","matrixWorldInverse","el","RenderableSprite","RenderableLine","setFromPoints","intersectsBox","RenderableFace","overdraw","union","error","RenderableObject","object","renderOrder","RenderableVertex","vertexNormalsLength","Vector2","Vector4","visible","vertex","projectObject","Light","Mesh","Line","Points","frustumCulled","_frustum","intersectsObject","addObject","intersectsSprite","children","_object","getNextObjectInPool","applyMatrix4","_viewProjectionMatrix","objects","pushPoint","_vector4","invW","w","_sprite","getNextSpriteInPool","abs","projectionMatrix","_objectCount","_objectPoolLength","_objectPool","getNextVertexInPool","_vertexCount","_vertexPoolLength","_vertexPool","getNextFaceInPool","_faceCount","_facePoolLength","face","_facePool","getNextLineInPool","_lineCount","_linePoolLength","line","_linePool","_spriteCount","_spritePoolLength","sprite","_spritePool","painterSort","clipLine","s1","s2","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","lerp","_vertex","_face","_line","_modelMatrix","Box3","_boundingBox","_points3","_viewMatrix","Matrix4","_modelViewProjectionMatrix","_normalMatrix","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","unprojectVector","unproject","pickingRay","renderList","setObject","normalMatrix","normals","colors","projectVertex","pushVertex","pushNormal","pushColor","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","fromArray","pushTriangle","side","DoubleSide","autoUpdate","updateMatrixWorld","parent","getInverse","multiplyMatrices","setFromMatrix","sort","o","ol","geometry","BufferGeometry","attributes","groups","positions","array","uv","indices","group","start","Geometry","faceVertexUvs","isMultiMaterial","isArray","v","vl","morphTargets","morphInfluences","morphTargetInfluences","t","tl","influence","targetVertex","fl","materialIndex","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","n","nl","vertexUvs","u","step","LineSegments","addEventListener","forEach","logoBgColorMatrix","flags","ret","flag","cn","en","div","className","innerHTML","reduce","acc","cord","PerspectiveCamera","marked","screenDOM","queryWithSideEffect","sel","querySelectorAll","logoFlips","backgroundColor","highlightFlips","classList","remove","getColNum","random","cols","first","second","runFlipHighlight"],"mappings":"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"}