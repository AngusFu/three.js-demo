{"version":3,"file":"bundle.js","sources":["../index.js"],"sourcesContent":["const THREE = window.THREE;\n\nvar SEPARATION = 100, AMOUNTX = 50, AMOUNTY = 50;\n\nvar container;\n\nvar particles, particle, count = 0;\n\nvar mouseX = 400, mouseY = -42;\n\nvar windowHalfX = window.innerWidth / 2;\nvar windowHalfY = window.innerHeight / 2;\n\nconst scene = new THREE.Scene();\nconst renderer = new THREE.CanvasRenderer();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000);\n\nconst xMesh = appendImage('./x.png');\nscene.add(xMesh);\n\ninit();\nanimate();\n\nfunction init() {\n  container = document.createElement('div');\n  document.body.appendChild(container);\n  camera.position.z = 1000;\n  particles = new Array();\n\n  var PI2 = Math.PI * 2;\n  var material = new THREE.SpriteCanvasMaterial({\n    color: 0x00FFF5,\n    program: function (context) {\n      context.beginPath();\n      context.arc(0, 0, 0.5, 0, PI2, true);\n      context.fill();\n    }\n  });\n\n  var i = 0;\n  for (var ix = 0; ix < AMOUNTX; ix++) {\n    for (var iy = 0; iy < AMOUNTY; iy++) {\n      particle = particles[i++] = new THREE.Sprite(material);\n      particle.position.x = ix * SEPARATION - ((AMOUNTX * SEPARATION) / 2);\n      particle.position.z = iy * SEPARATION - ((AMOUNTY * SEPARATION) / 2);\n      scene.add(particle);\n      if (i === 49) {\n        xMesh.position.x = particle.position.x;\n        xMesh.position.z = particle.position.z;\n      }\n    }\n  }\n\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  container.appendChild(renderer.domElement);\n\n  window.addEventListener('resize', function onWindowResize() {\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }, false);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  render();\n}\n\nfunction render() {\n  camera.position.x += (mouseX - camera.position.x) * .05;\n  camera.position.y += (- mouseY - camera.position.y) * .05;\n  camera.lookAt(scene.position);\n\n  var i = 0;\n  for (var ix = 0; ix < AMOUNTX; ix++) {\n    for (var iy = 0; iy < AMOUNTY; iy++) {\n      particle = particles[i++];\n      particle.position.y = (Math.sin((ix + count) * 0.3) * 50) +\n        (Math.sin((iy + count) * 0.5) * 50);\n      particle.scale.x = particle.scale.y = (Math.sin((ix + count) * 0.3) + 1) * 2 +\n        (Math.sin((iy + count) * 0.5) + 1) * 2;\n      if (i === 50) {\n        xMesh.position.y = particle.position.y;\n        xMesh.scale.x = particle.scale.x;\n      }\n    }\n  }\n\n  renderer.render(scene, camera);\n  count += 0.1;\n}\n\nfunction appendImage(src) {\n  var texture = new THREE.ImageUtils.loadTexture(src);\n  var material = new THREE.MeshBasicMaterial({\n    map: texture,\n    side: THREE.DoubleSide\n  });\n  var gemoetry = new THREE.PlaneGeometry(50, 50, 1, 1);\n  var mesh = new THREE.Mesh(gemoetry, material);\n  return mesh;\n}"],"names":["animate","requestAnimationFrame","render","camera","position","x","mouseX","y","mouseY","lookAt","scene","i","ix","AMOUNTX","iy","AMOUNTY","particle","particles","Math","sin","count","scale","xMesh","renderer","const","container","THREE","window","SEPARATION","windowHalfX","innerWidth","windowHalfY","innerHeight","Scene","CanvasRenderer","PerspectiveCamera","src","texture","ImageUtils","loadTexture","material","MeshBasicMaterial","map","side","DoubleSide","gemoetry","PlaneGeometry","Mesh","add","document","createElement","body","appendChild","z","Array","PI2","PI","SpriteCanvasMaterial","color","program","context","beginPath","arc","fill","Sprite","setPixelRatio","devicePixelRatio","setSize","domElement","addEventListener","aspect","updateProjectionMatrix"],"mappings":"yBAkEA,SAASA,IACPC,sBAAsBD,GACtBE,IAGF,SAASA,IACPC,EAAOC,SAASC,GAAoC,KAA9BC,EAASH,EAAOC,SAASC,GAC/CF,EAAOC,SAASG,GAAsC,MAA9BC,EAASL,EAAOC,SAASG,GACjDJ,EAAOM,OAAOC,EAAMN,UAGpB,IAAK,IADDO,EAAI,EACCC,EAAK,EAAGA,EAAKC,EAASD,IAC7B,IAAK,IAAIE,EAAK,EAAGA,EAAKC,EAASD,KAC7BE,EAAWC,EAAUN,MACZP,SAASG,EAAoC,GAA/BW,KAAKC,IAAmB,IAAdP,EAAKQ,IACJ,GAA/BF,KAAKC,IAAmB,IAAdL,EAAKM,IAClBJ,EAASK,MAAMhB,EAAIW,EAASK,MAAMd,EAAyC,GAApCW,KAAKC,IAAmB,IAAdP,EAAKQ,IAAgB,GAC/B,GAApCF,KAAKC,IAAmB,IAAdL,EAAKM,IAAgB,GACxB,KAANT,IACFW,EAAMlB,SAASG,EAAIS,EAASZ,SAASG,EACrCe,EAAMD,MAAMhB,EAAIW,EAASK,MAAMhB,GAKrCkB,EAASrB,OAAOQ,EAAOP,GACvBiB,GAAS,GA5FXI,IAIIC,EAEAR,EAAWD,EANTU,EAAQC,OAAOD,MAEjBE,EAAa,IAAKf,EAAU,GAAIE,EAAU,GAIrBK,EAAQ,EAE7Bd,EAAS,IAAKE,GAAU,GAExBqB,EAAcF,OAAOG,WAAa,EAClCC,EAAcJ,OAAOK,YAAc,EAEjCtB,EAAQ,IAAIgB,EAAMO,MAClBV,EAAW,IAAIG,EAAMQ,eACrB/B,EAAS,IAAIuB,EAAMS,kBAAkB,GAAIR,OAAOG,WAAaH,OAAOK,YAAa,EAAG,KAEpFV,EA8EN,SAAqBc,GACnB,IAAIC,EAAU,IAAIX,EAAMY,WAAWC,YAAYH,GAC3CI,EAAW,IAAId,EAAMe,mBACvBC,IAAKL,EACLM,KAAMjB,EAAMkB,aAEVC,EAAW,IAAInB,EAAMoB,cAAc,GAAI,GAAI,EAAG,GAElD,OADW,IAAIpB,EAAMqB,KAAKF,EAAUL,IArFZ,WAC1B9B,EAAMsC,IAAI1B,GAKV,WACEG,EAAYwB,SAASC,cAAc,OACnCD,SAASE,KAAKC,YAAY3B,GAC1BtB,EAAOC,SAASiD,EAAI,IACpBpC,EAAY,IAAIqC,MAahB,IAAK,IAXDC,EAAgB,EAAVrC,KAAKsC,GACXhB,EAAW,IAAId,EAAM+B,sBACvBC,MAAO,MACPC,QAAS,SAAUC,GACjBA,EAAQC,YACRD,EAAQE,IAAI,EAAG,EAAG,GAAK,EAAGP,GAAK,GAC/BK,EAAQG,UAIRpD,EAAI,EACCC,EAAK,EAAGA,EAAKC,EAASD,IAC7B,IAAK,IAAIE,EAAK,EAAGA,EAAKC,EAASD,KAC7BE,EAAWC,EAAUN,KAAO,IAAIe,EAAMsC,OAAOxB,IACpCpC,SAASC,EAAIO,EAAKgB,EAAef,EAAUe,EAAc,EAClEZ,EAASZ,SAASiD,EAAIvC,EAAKc,EAAeb,EAAUa,EAAc,EAClElB,EAAMsC,IAAIhC,GACA,KAANL,IACFW,EAAMlB,SAASC,EAAIW,EAASZ,SAASC,EACrCiB,EAAMlB,SAASiD,EAAIrC,EAASZ,SAASiD,GAK3C9B,EAAS0C,cAActC,OAAOuC,kBAC9B3C,EAAS4C,QAAQxC,OAAOG,WAAYH,OAAOK,aAC3CP,EAAU2B,YAAY7B,EAAS6C,YAE/BzC,OAAO0C,iBAAiB,SAAU,WAChCxC,EAAcF,OAAOG,WAAa,EAClCC,EAAcJ,OAAOK,YAAc,EACnC7B,EAAOmE,OAAS3C,OAAOG,WAAaH,OAAOK,YAC3C7B,EAAOoE,yBACPhD,EAAS4C,QAAQxC,OAAOG,WAAYH,OAAOK,eAC1C,MA1CLhC"}